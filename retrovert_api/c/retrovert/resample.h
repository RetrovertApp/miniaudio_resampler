///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by api_generator. DO NOT EDIT!
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

#include "rv_types.h"

#ifdef _cplusplus
extern "C" {
#endif

#include "audio_format.h"
#include "service.h"
#include "settings.h"
#define RV_RESAMPLE_PLUGIN_API_VERSION 1

typedef struct RVConvertConfig {
    RVAudioFormat input;
    RVAudioFormat output;
} RVConvertConfig;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVResamplePlugin {
    // Version of the API. This has to be set to RV_RESAMPLE_PLUGIN_API_VERSION
    uint64_t api_version;
    // Name of the plugin. This name should be unique or it may fail to load if there is a collision.
    const char* name;
    // Scematic version of the plugin. If the version doesn't follow the rules of SemVersion it may fail to load.
    const char* version;
    // Scematic version of library being used. Useful if you only update lib x from 0.1 to 0.2 but no other changes to
    // plugin In case the plugin doesn't use any external library this can be set to "" or NULL
    const char* library_version;
    void* (*create)(const RVService* services);
    // Destroy the instance of the plugin. It's expected that the user will free the user_data pointer at
    // this point as it won't be used anymore.
    int (*destroy)(void* user_data);
    void (*set_config)(void* user_data, const RVConvertConfig* format);
    uint32_t (*convert)(void* user_data, void* output_data, void* input_data, uint32_t input_frame_count);
    uint32_t (*get_expected_output_frame_count)(void* user_data, uint32_t frame_count);
    uint32_t (*get_required_input_frame_count)(void* user_data, uint32_t frame_count);
    // Called once for each plugin. This allows the plugin to setup an instance of the logging api
    void (*static_init)(const RVService* services);
    // Called when the user has changed some settings
    RVSettingsUpdate (*settings_updated)(void* user_data, const RVSettings* settings);
} RVResamplePlugin;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifdef _cplusplus
}
#endif