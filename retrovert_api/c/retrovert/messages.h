///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by api_generator. DO NOT EDIT!
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

#include "rv_types.h"

#ifdef _cplusplus
extern "C" {
#endif

typedef struct RVLoopCurrent {
    bool state;
} RVLoopCurrent;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVRandomizePlaylist {
    bool state;
} RVRandomizePlaylist;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVNextSong {
} RVNextSong;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVPrevSong {
} RVPrevSong;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVReplyPlaySong {
} RVReplyPlaySong;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVStopSong {
} RVStopSong;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVRequestAddedUrls {
} RVRequestAddedUrls;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVRemoveSelectedPlaylistEntries {
} RVRemoveSelectedPlaylistEntries;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVRemovePlaylistEntries {
} RVRemovePlaylistEntries;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVRequestPlaySong {
    bool pause_state;
    bool force;
} RVRequestPlaySong;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVRequestSelectSong {
    bool pause_state;
    bool force;
    const char* path;
    int64_t playlist_index;
} RVRequestSelectSong;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVRequestAddUrls {
    const char** urls;
    uint64_t urls_size;
} RVRequestAddUrls;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVLogMessages {
    const char** messages;
    uint64_t messages_size;
} RVLogMessages;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVLogClear {
} RVLogClear;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVLogToFile {
    const char* filename;
    bool enable;
} RVLogToFile;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVLogSendMessages {
    bool enable;
} RVLogSendMessages;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVSongDescription {
    const char* path;
    const char* title;
    float duration;
    const char* song_type;
    const char* artist;
    const char* date;
    const char* authoring_tool;
} RVSongDescription;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVUrlEntry {
    const char* path;
    RVSongDescription description;
} RVUrlEntry;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVSelectSong {
    RVSongDescription description;
    int64_t playlist_index;
} RVSelectSong;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVReplyAddedUrls {
    int64_t index;
    RVUrlEntry* urls;
    uint64_t urls_size;
} RVReplyAddedUrls;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVRequestTrackerData {
    int64_t pattern;
} RVRequestTrackerData;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVRowData {
    const char* note;
    const char* instrument;
    const char* volumeffect;
    const char* effect;
    const char* volume;
    const char* parameter;
} RVRowData;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVSongMetadata {
    const char* url;
    const char* title;
    const char* song_type;
    float length;
    const char* authoring_tool;
    const char* artist;
    const char* date;
    const char* message;
    const char** samples;
    uint64_t samples_size;
    const char** instruments;
    uint64_t instruments_size;
} RVSongMetadata;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVCurrentPosition {
    float position;
    int current_pattern;
    int current_row;
    int current_speed;
    float duration;
} RVCurrentPosition;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVOutputDevice {
    const char* name;
    int min_channels;
    int max_channels;
    uint32_t min_sample_rate;
    uint32_t max_sample_rate;
} RVOutputDevice;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVRequestOutputDevices {
} RVRequestOutputDevices;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVReplyOutputDevices {
    const char* current_device;
    RVOutputDevice* devices;
    uint64_t devices_size;
} RVReplyOutputDevices;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct RVSelectOutputDevice {
    const char* name;
} RVSelectOutputDevice;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifdef _cplusplus
}
#endif